trigger:
  branches:
    include:
      - '*'
      - refs/tags/*

jobs:

- job: Build_Windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: UseDotNet@2
    inputs:
      useGlobalJson: true
  - bash: |
      ./build.sh
    displayName: 'Build'
    env:
      COVERALLS_REPO_TOKEN: '$(COVERALLS_REPO_TOKEN)'
  - bash: |
      ./build-sample.sh
    displayName: 'Build Sample'

- job: Build_Linux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UseDotNet@2
    inputs:
      useGlobalJson: true
  - bash: |
      ./build.sh
    displayName: 'Build'

- job: Build_MacOS
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: UseDotNet@2
    inputs:
      useGlobalJson: true
  - bash: |
      ./build.sh
    displayName: 'Build'

- job: Push_Package
  dependsOn:
    - Build_Windows
    - Build_Linux
    - Build_MacOS
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - bash: |
      export Version=${TagName:1}
      dotnet pack -c Release
      dotnet nuget push nupkg/*.nupkg -k $NUGET_KEY -s https://api.nuget.org/v3/index.json
    env:
      TagName: '$(Build.SourceBranchName)'
      NUGET_KEY: '$(NUGET_KEY)'
    displayName: 'Release'
    